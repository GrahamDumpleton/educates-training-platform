name: Build and Publish Images

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+b[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+.dev[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+a[0-9]+.dev[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+b[0-9]+.dev[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+.dev[0-9]+"

jobs:
  publish-generic-images:
    name: Publish
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - image: docker-in-docker
          - image: docker-registry
          - image: pause-container
          - image: session-manager
          - image: training-portal

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate container image metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{github.repository_owner}}/educates-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=sha

      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.image }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true

  publish-workshop-base-image:
    name: Publish (base-environment)
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Restore Docker cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-base-environment-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-base-environment-

      - name: Generate container image metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{github.repository_owner}}/educates-base-environment
          tags: |
            type=ref,event=branch
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=sha

      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Build and push base-environment image
        uses: docker/build-push-action@v2
        with:
          context: workshop-images/base-environment
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true

      - name: Save Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          du -ks /tmp/.buildx-cache

  publish-workshop-images:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - publish-workshop-base-image

    strategy:
      matrix:
        include:
          - image: jdk8-environment
          - image: jdk11-environment
          - image: conda-environment

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Calculate variables
        shell: bash
        run: |
          echo "REPOSITORY_SHA_TAG=sha-${GITHUB_SHA::7}" >>${GITHUB_ENV}

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Restore Docker cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.image }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.image }}-

      - name: Generate container image metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{github.repository_owner}}/educates-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=sha

      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@v2
        with:
          context: workshop-images/${{ matrix.image }}
          build-args: |
            IMAGE_REPOSITORY=ghcr.io/${{github.repository_owner}}
            BASE_IMAGE_NAME=educates-base-environment
            PACKAGE_VERSION=${{ env.REPOSITORY_SHA_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: ${{ steps.meta.outputs.tags }}
          push: true

      - name: Save Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          du -ks /tmp/.buildx-cache

  publish-carvel-bundle:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - publish-generic-images
      - publish-workshop-images

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Install Carvel tools
        shell: bash
        run: curl -L https://carvel.dev/install.sh | bash

      - name: Calculate variables
        shell: bash
        run: |
          echo "REPOSITORY_TAG=${GITHUB_REF##*/}" >>${GITHUB_ENV}
          echo "REPOSITORY_SHA_TAG=sha-${GITHUB_SHA::7}" >>${GITHUB_ENV}

      - name: Publish bundle
        shell: bash
        run: |
          ytt -f carvel-package/config/images.yaml \
            -f carvel-package/config/schema.yaml \
            -v version=${{env.REPOSITORY_TAG}} \
            -v imageRegistry.host=ghcr.io \
            -v imageRegistry.namespace=${{github.repository_owner}} \
            > carvel-package/bundle/kbld-images.yaml
          cat carvel-package/bundle/kbld-images.yaml | kbld -f - \
            --imgpkg-lock-output carvel-package/bundle/.imgpkg/images.yml
          imgpkg push \
            -b ghcr.io/${{github.repository_owner}}/educates-training-platform:${{env.REPOSITORY_TAG}} \
            -f carvel-package/bundle \
            --registry-username=${{github.actor}} \
            --registry-password=${{env.GITHUB_TOKEN}}
          ytt -f carvel-package/config/app.yaml \
            -f carvel-package/config/schema.yaml \
            -v version=${{env.REPOSITORY_TAG}} \
            -v imageRegistry.host=ghcr.io \
            -v imageRegistry.namespace=${{github.repository_owner}} > ${{ runner.temp }}/app.yaml

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.REPOSITORY_TAG}}
          release_name: "educates-training-platform:${{env.REPOSITORY_TAG}}"
          draft: false
          prerelease: false

      - name: Upload app.yaml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/app.yaml
          asset_name: app.yaml
          asset_content_type: text/yaml
