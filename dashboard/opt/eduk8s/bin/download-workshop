#!/bin/bash

set -eo pipefail

WORKSPACE_DIRECTORY=${WORKSPACE_DIRECTORY:-/home/eduk8s}
ALTERNATE_DIRECTORY=${ALTERNATE_DIRECTORY:-/opt/workshop}

WORKDIR=/tmp/download-workshop.$$

trap "rm -rf /tmp/download.tar.gz $WORKDIR $WORKDIR.tar" EXIT

FORCE=NO

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --force)
    FORCE=YES
    shift
    ;;
    *)
    POSITIONAL+=("$1")
    shift
    ;;
esac
done
set -- "${POSITIONAL[@]}"

DOWNLOAD_URL=$1

if [ "$#" -lt 1 -o -z "$DOWNLOAD_URL" ]; then
  echo "Usage: $0 [--force] DOWNLOAD_URL" >&2
  exit 1
fi

# Don't do download if it has already been run and no --force option.

if [ -f $WORKSPACE_DIRECTORY/.eduk8s/download-url.txt -a $FORCE != YES ]; then
    echo "Skipping download of $DOWNLOAD_URL"
    exit 0
fi

# Record the location where content was downloaded from so that can
# use the update-workshop script to refresh it. Also used to block use
# of this script again if --force is not used.

if [ -d $WORKSPACE_DIRECTORY ]; then
    mkdir -p $WORKSPACE_DIRECTORY/.eduk8s
    echo "$DOWNLOAD_URL" > $WORKSPACE_DIRECTORY/.eduk8s/download-url.txt
fi

# Handle special GitHub repository reference or a HTTP URL to a tarball.
# The tarball will be downloaded and extracted into a temporary directory.

mkdir $WORKDIR

echo "Downloading from $DOWNLOAD_URL"

GITHUB_RE_1="^github\.com\/([^\/?]+)\/(([^\/?]+)\/?)([^?]+)?(\?(ref=(.*)))?$"
GITLAB_RE_1="^gitlab\.com\/([^\/?]+)\/(([^\/?]+)\/?)([^?]+)?(\?(ref=(.*)))?$"

if [[ $DOWNLOAD_URL =~ $GITHUB_RE_1 ]]; then
    ORGANIZATION=${BASH_REMATCH[1]}
    REPOSITORY=${BASH_REMATCH[3]}
    WORKSHOP_PATH=${BASH_REMATCH[4]:-}
    REPOSITORY_REF=${BASH_REMATCH[7]:-master}

    DOWNLOAD_URL="https://github.com/$ORGANIZATION/$REPOSITORY/archive/$REPOSITORY_REF.tar.gz"

    WORKSHOP_PATH=${WORKSHOP_PATH%/}

    TARBALL_PATH=$REPOSITORY-$REPOSITORY_REF

    if [ x"$WORKSHOP_PATH" != x"" ]; then
        TARBALL_PATH=$TARBALL_PATH/$WORKSHOP_PATH
    fi

    curl -sL -o /tmp/download.tar.gz $DOWNLOAD_URL

    tar -C $WORKDIR -xzf /tmp/download.tar.gz $TARBALL_PATH

    ROOTDIR=$WORKDIR/$TARBALL_PATH
else
    if [[ $DOWNLOAD_URL =~ $GITLAB_RE_1 ]]; then
        ORGANIZATION=${BASH_REMATCH[1]}
        REPOSITORY=${BASH_REMATCH[3]}
        WORKSHOP_PATH=${BASH_REMATCH[4]:-}
        REPOSITORY_REF=${BASH_REMATCH[7]:-master}

        DOWNLOAD_URL="https://gitlab.com/$ORGANIZATION/$REPOSITORY/-/archive/$REPOSITORY_REF/$REPOSITORY-$REPOSITORY_REF.tar.gz"

        WORKSHOP_PATH=${WORKSHOP_PATH%/}

        TARBALL_PATH=$REPOSITORY-$REPOSITORY_REF

        if [ x"$WORKSHOP_PATH" != x"" ]; then
            TARBALL_PATH=$TARBALL_PATH/$WORKSHOP_PATH
        fi

        curl -sL -o /tmp/download.tar.gz $DOWNLOAD_URL

        tar -C $WORKDIR -xzf /tmp/download.tar.gz $TARBALL_PATH

        ROOTDIR=$WORKDIR/$TARBALL_PATH
    else
        curl -sL -o /tmp/download.tar.gz $DOWNLOAD_URL

        tar -C $WORKDIR -xzf /tmp/download.tar.gz

        ROOTDIR=$WORKDIR
    fi
fi

# We want to exclude files so package up the directory again and then
# extract it into a fresh directory. We can't extract straight into the
# target directories as we potentially can't change permissions on the
# home directory if it is a mounted volume.

tar -C $ROOTDIR --exclude-vcs --exclude=.eduk8signore --exclude-ignore=.eduk8signore -cf $WORKDIR.tar .

rm -rf $WORKDIR
mkdir $WORKDIR

tar -C $WORKDIR -xvf $WORKDIR.tar
 
rm -f $WORKDIR.tar

# Now copy the files into their final locations. This should overlay files.

shopt -s dotglob

if [ -d $WORKSPACE_DIRECTORY/workshop ]; then
    cp -r $WORKDIR/* $WORKSPACE_DIRECTORY/
else
    mkdir -p $ALTERNATE_DIRECTORY
    cp -r $WORKDIR/workshop/* $ALTERNATE_DIRECTORY/
    cp -r $WORKDIR/* $WORKSPACE_DIRECTORY/
    rm -rf $WORKSPACE_DIRECTORY/workshop
fi

rm -rf $WORKDIR
