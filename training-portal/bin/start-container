#!/bin/bash

set -x

# Make sure required environment variables are being set.

if [ x"$TRAINING_PORTAL" == x"" ]; then
    echo "ERROR: TRAINING_PORTAL not defined." 1>&2
    exit 1
fi

# Calculate base directories for source code, config and data.
# Make sure we are in the source directory when being run.

ROOT_DIR=$(cd `dirname $0`/..; pwd)

SRC_DIR=$ROOT_DIR/src

VENV_DIR=$ROOT_DIR/venv
DATA_DIR=$ROOT_DIR/data
CONFIG_DIR=$ROOT_DIR/config

cd $SRC_DIR

# Set defaults for environment variables which are optional.

ADMIN_USERNAME=${ADMIN_USERNAME:-educates}
ADMIN_EMAIL=${ADMIN_EMAIL:-training@educates.dev}
ADMIN_PASSWORD=${ADMIN_PASSWORD:-educates}

export ADMIN_USERNAME
export ADMIN_EMAIL
export ADMIN_PASSWORD

# Activate the Python virtual environment for the portal application.

source $VENV_DIR/bin/activate

# Initialize the database if it doesn't already exist. We always
# perform database migration in case database models were updated.

echo " -----> Running Django database migration"

if [ ! -f $DATA_DIR/db.sqlite3 ]; then
    THIS_IS_THE_FIRST_TIME=true
fi

python $SRC_DIR/manage.py migrate

if [ x"$THIS_IS_THE_FIRST_TIME" = x"true" ]; then
    if [ x"$ADMIN_PASSWORD" != x"" ]; then
        echo " -----> Creating predefined Django super user"
        (cat - | python $SRC_DIR/manage.py shell) << !
from django.contrib.auth.models import User
try:
    User.objects.get(username='$ADMIN_USERNAME')
except User.DoesNotExist:
    User.objects.create_superuser('$ADMIN_USERNAME','$ADMIN_EMAIL','$ADMIN_PASSWORD')
!
    else
        if (tty > /dev/null 2>&1); then
            echo " -----> Running Django super user creation"
            python $SRC_DIR/manage.py createsuperuser
        fi
    fi
fi

SERVER_ARGS=""

SERVER_ARGS="$SERVER_ARGS --port 8080"
SERVER_ARGS="$SERVER_ARGS --trust-proxy-header X-Forwarded-Host"
SERVER_ARGS="$SERVER_ARGS --trust-proxy-header X-Forwarded-Port"
SERVER_ARGS="$SERVER_ARGS --log-to-terminal"
SERVER_ARGS="$SERVER_ARGS --access-log"
SERVER_ARGS="$SERVER_ARGS --log-level info"
SERVER_ARGS="$SERVER_ARGS --include-file httpd.conf"

if test -d /opt/app-root/static/theme; then
    SERVER_ARGS="$SERVER_ARGS --url-alias /static/workshops/theme/ /opt/app-root/static/theme/"
fi

exec python $SRC_DIR/manage.py runmodwsgi $SERVER_ARGS
